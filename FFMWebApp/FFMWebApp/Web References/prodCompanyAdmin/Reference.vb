'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace prodCompanyAdmin
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CompanyAdminService-0.0.1SoapBinding", [Namespace]:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SvCustomStatusValue)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SvServiceOrganization)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SvDivision))>  _
    Partial Public Class CompanyAdminWebServiceProxyService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private createCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createDeviceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkersByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDeviceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDevicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteDeviceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateDeviceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createOrUpdateDeviceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private linkDeviceToWorkerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createWorkerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateWorkerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createOrUpdateWorkerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteWorkerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDivisionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private populateWorkerCustomStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FFMWebApp.My.MySettings.Default.FFMWebApp_prodCompanyAdmin_CompanyAdminWebServiceProxyService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event createCompanyCompleted As createCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event createDeviceCompleted As createDeviceCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkersCompleted As getWorkersCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkerByNameCompleted As getWorkerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkersByNameCompleted As getWorkersByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getDeviceCompleted As getDeviceCompletedEventHandler
        
        '''<remarks/>
        Public Event getDevicesCompleted As getDevicesCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteDeviceCompleted As deleteDeviceCompletedEventHandler
        
        '''<remarks/>
        Public Event updateDeviceCompleted As updateDeviceCompletedEventHandler
        
        '''<remarks/>
        Public Event createOrUpdateDeviceCompleted As createOrUpdateDeviceCompletedEventHandler
        
        '''<remarks/>
        Public Event linkDeviceToWorkerCompleted As linkDeviceToWorkerCompletedEventHandler
        
        '''<remarks/>
        Public Event createWorkerCompleted As createWorkerCompletedEventHandler
        
        '''<remarks/>
        Public Event updateWorkerCompleted As updateWorkerCompletedEventHandler
        
        '''<remarks/>
        Public Event createOrUpdateWorkerCompleted As createOrUpdateWorkerCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteWorkerCompleted As deleteWorkerCompletedEventHandler
        
        '''<remarks/>
        Public Event getDivisionsCompleted As getDivisionsCompletedEventHandler
        
        '''<remarks/>
        Public Event populateWorkerCustomStatusCompleted As populateWorkerCustomStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function createCompany(ByVal svCompany As SvCompany, ByVal linkWorkItemTypes As Boolean) As <System.Xml.Serialization.SoapElementAttribute("createCompanyReturn")> SvCompany
            Dim results() As Object = Me.Invoke("createCompany", New Object() {svCompany, linkWorkItemTypes})
            Return CType(results(0),SvCompany)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createCompanyAsync(ByVal svCompany As SvCompany, ByVal linkWorkItemTypes As Boolean)
            Me.createCompanyAsync(svCompany, linkWorkItemTypes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createCompanyAsync(ByVal svCompany As SvCompany, ByVal linkWorkItemTypes As Boolean, ByVal userState As Object)
            If (Me.createCompanyOperationCompleted Is Nothing) Then
                Me.createCompanyOperationCompleted = AddressOf Me.OncreateCompanyOperationCompleted
            End If
            Me.InvokeAsync("createCompany", New Object() {svCompany, linkWorkItemTypes}, Me.createCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.createCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createCompanyCompleted(Me, New createCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function createDevice(ByVal svDevice As SvDevice) As <System.Xml.Serialization.SoapElementAttribute("createDeviceReturn")> SvResult
            Dim results() As Object = Me.Invoke("createDevice", New Object() {svDevice})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createDeviceAsync(ByVal svDevice As SvDevice)
            Me.createDeviceAsync(svDevice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createDeviceAsync(ByVal svDevice As SvDevice, ByVal userState As Object)
            If (Me.createDeviceOperationCompleted Is Nothing) Then
                Me.createDeviceOperationCompleted = AddressOf Me.OncreateDeviceOperationCompleted
            End If
            Me.InvokeAsync("createDevice", New Object() {svDevice}, Me.createDeviceOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateDeviceOperationCompleted(ByVal arg As Object)
            If (Not (Me.createDeviceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createDeviceCompleted(Me, New createDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getWorkers(ByVal securityGroupFilter() As String) As <System.Xml.Serialization.SoapElementAttribute("getWorkersReturn")> SvWorker()
            Dim results() As Object = Me.Invoke("getWorkers", New Object() {securityGroupFilter})
            Return CType(results(0),SvWorker())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkersAsync(ByVal securityGroupFilter() As String)
            Me.getWorkersAsync(securityGroupFilter, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkersAsync(ByVal securityGroupFilter() As String, ByVal userState As Object)
            If (Me.getWorkersOperationCompleted Is Nothing) Then
                Me.getWorkersOperationCompleted = AddressOf Me.OngetWorkersOperationCompleted
            End If
            Me.InvokeAsync("getWorkers", New Object() {securityGroupFilter}, Me.getWorkersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkersCompleted(Me, New getWorkersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getWorkerByName(ByVal workerName As String) As <System.Xml.Serialization.SoapElementAttribute("getWorkerByNameReturn")> SvWorker
            Dim results() As Object = Me.Invoke("getWorkerByName", New Object() {workerName})
            Return CType(results(0),SvWorker)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkerByNameAsync(ByVal workerName As String)
            Me.getWorkerByNameAsync(workerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkerByNameAsync(ByVal workerName As String, ByVal userState As Object)
            If (Me.getWorkerByNameOperationCompleted Is Nothing) Then
                Me.getWorkerByNameOperationCompleted = AddressOf Me.OngetWorkerByNameOperationCompleted
            End If
            Me.InvokeAsync("getWorkerByName", New Object() {workerName}, Me.getWorkerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkerByNameCompleted(Me, New getWorkerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getWorkersByName(ByVal workerNameArray() As String) As <System.Xml.Serialization.SoapElementAttribute("getWorkersByNameReturn")> SvWorker()
            Dim results() As Object = Me.Invoke("getWorkersByName", New Object() {workerNameArray})
            Return CType(results(0),SvWorker())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkersByNameAsync(ByVal workerNameArray() As String)
            Me.getWorkersByNameAsync(workerNameArray, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkersByNameAsync(ByVal workerNameArray() As String, ByVal userState As Object)
            If (Me.getWorkersByNameOperationCompleted Is Nothing) Then
                Me.getWorkersByNameOperationCompleted = AddressOf Me.OngetWorkersByNameOperationCompleted
            End If
            Me.InvokeAsync("getWorkersByName", New Object() {workerNameArray}, Me.getWorkersByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkersByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkersByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkersByNameCompleted(Me, New getWorkersByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getDevice(ByVal deviceIdentifier As String) As <System.Xml.Serialization.SoapElementAttribute("getDeviceReturn")> SvDevice
            Dim results() As Object = Me.Invoke("getDevice", New Object() {deviceIdentifier})
            Return CType(results(0),SvDevice)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDeviceAsync(ByVal deviceIdentifier As String)
            Me.getDeviceAsync(deviceIdentifier, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDeviceAsync(ByVal deviceIdentifier As String, ByVal userState As Object)
            If (Me.getDeviceOperationCompleted Is Nothing) Then
                Me.getDeviceOperationCompleted = AddressOf Me.OngetDeviceOperationCompleted
            End If
            Me.InvokeAsync("getDevice", New Object() {deviceIdentifier}, Me.getDeviceOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDeviceOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDeviceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDeviceCompleted(Me, New getDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getDevices() As <System.Xml.Serialization.SoapElementAttribute("getDevicesReturn")> SvDevice()
            Dim results() As Object = Me.Invoke("getDevices", New Object(-1) {})
            Return CType(results(0),SvDevice())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDevicesAsync()
            Me.getDevicesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDevicesAsync(ByVal userState As Object)
            If (Me.getDevicesOperationCompleted Is Nothing) Then
                Me.getDevicesOperationCompleted = AddressOf Me.OngetDevicesOperationCompleted
            End If
            Me.InvokeAsync("getDevices", New Object(-1) {}, Me.getDevicesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDevicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDevicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDevicesCompleted(Me, New getDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function deleteDevice(ByVal deviceIdentifier As String) As <System.Xml.Serialization.SoapElementAttribute("deleteDeviceReturn")> SvResult
            Dim results() As Object = Me.Invoke("deleteDevice", New Object() {deviceIdentifier})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub deleteDeviceAsync(ByVal deviceIdentifier As String)
            Me.deleteDeviceAsync(deviceIdentifier, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteDeviceAsync(ByVal deviceIdentifier As String, ByVal userState As Object)
            If (Me.deleteDeviceOperationCompleted Is Nothing) Then
                Me.deleteDeviceOperationCompleted = AddressOf Me.OndeleteDeviceOperationCompleted
            End If
            Me.InvokeAsync("deleteDevice", New Object() {deviceIdentifier}, Me.deleteDeviceOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteDeviceOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteDeviceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteDeviceCompleted(Me, New deleteDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function updateDevice(ByVal svDevice As SvDevice) As <System.Xml.Serialization.SoapElementAttribute("updateDeviceReturn")> SvResult
            Dim results() As Object = Me.Invoke("updateDevice", New Object() {svDevice})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub updateDeviceAsync(ByVal svDevice As SvDevice)
            Me.updateDeviceAsync(svDevice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateDeviceAsync(ByVal svDevice As SvDevice, ByVal userState As Object)
            If (Me.updateDeviceOperationCompleted Is Nothing) Then
                Me.updateDeviceOperationCompleted = AddressOf Me.OnupdateDeviceOperationCompleted
            End If
            Me.InvokeAsync("updateDevice", New Object() {svDevice}, Me.updateDeviceOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateDeviceOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateDeviceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateDeviceCompleted(Me, New updateDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function createOrUpdateDevice(ByVal svDevice As SvDevice) As <System.Xml.Serialization.SoapElementAttribute("createOrUpdateDeviceReturn")> SvResult
            Dim results() As Object = Me.Invoke("createOrUpdateDevice", New Object() {svDevice})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createOrUpdateDeviceAsync(ByVal svDevice As SvDevice)
            Me.createOrUpdateDeviceAsync(svDevice, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createOrUpdateDeviceAsync(ByVal svDevice As SvDevice, ByVal userState As Object)
            If (Me.createOrUpdateDeviceOperationCompleted Is Nothing) Then
                Me.createOrUpdateDeviceOperationCompleted = AddressOf Me.OncreateOrUpdateDeviceOperationCompleted
            End If
            Me.InvokeAsync("createOrUpdateDevice", New Object() {svDevice}, Me.createOrUpdateDeviceOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateOrUpdateDeviceOperationCompleted(ByVal arg As Object)
            If (Not (Me.createOrUpdateDeviceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createOrUpdateDeviceCompleted(Me, New createOrUpdateDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function linkDeviceToWorker(ByVal deviceIdentifier As String, ByVal workerName As String) As <System.Xml.Serialization.SoapElementAttribute("linkDeviceToWorkerReturn")> SvResult
            Dim results() As Object = Me.Invoke("linkDeviceToWorker", New Object() {deviceIdentifier, workerName})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub linkDeviceToWorkerAsync(ByVal deviceIdentifier As String, ByVal workerName As String)
            Me.linkDeviceToWorkerAsync(deviceIdentifier, workerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub linkDeviceToWorkerAsync(ByVal deviceIdentifier As String, ByVal workerName As String, ByVal userState As Object)
            If (Me.linkDeviceToWorkerOperationCompleted Is Nothing) Then
                Me.linkDeviceToWorkerOperationCompleted = AddressOf Me.OnlinkDeviceToWorkerOperationCompleted
            End If
            Me.InvokeAsync("linkDeviceToWorker", New Object() {deviceIdentifier, workerName}, Me.linkDeviceToWorkerOperationCompleted, userState)
        End Sub
        
        Private Sub OnlinkDeviceToWorkerOperationCompleted(ByVal arg As Object)
            If (Not (Me.linkDeviceToWorkerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent linkDeviceToWorkerCompleted(Me, New linkDeviceToWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function createWorker(ByVal worker As SvWorker) As <System.Xml.Serialization.SoapElementAttribute("createWorkerReturn")> SvResult
            Dim results() As Object = Me.Invoke("createWorker", New Object() {worker})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createWorkerAsync(ByVal worker As SvWorker)
            Me.createWorkerAsync(worker, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createWorkerAsync(ByVal worker As SvWorker, ByVal userState As Object)
            If (Me.createWorkerOperationCompleted Is Nothing) Then
                Me.createWorkerOperationCompleted = AddressOf Me.OncreateWorkerOperationCompleted
            End If
            Me.InvokeAsync("createWorker", New Object() {worker}, Me.createWorkerOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateWorkerOperationCompleted(ByVal arg As Object)
            If (Not (Me.createWorkerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createWorkerCompleted(Me, New createWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function updateWorker(ByVal worker As SvWorker) As <System.Xml.Serialization.SoapElementAttribute("updateWorkerReturn")> SvResult
            Dim results() As Object = Me.Invoke("updateWorker", New Object() {worker})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub updateWorkerAsync(ByVal worker As SvWorker)
            Me.updateWorkerAsync(worker, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateWorkerAsync(ByVal worker As SvWorker, ByVal userState As Object)
            If (Me.updateWorkerOperationCompleted Is Nothing) Then
                Me.updateWorkerOperationCompleted = AddressOf Me.OnupdateWorkerOperationCompleted
            End If
            Me.InvokeAsync("updateWorker", New Object() {worker}, Me.updateWorkerOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateWorkerOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateWorkerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateWorkerCompleted(Me, New updateWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function createOrUpdateWorker(ByVal worker As SvWorker) As <System.Xml.Serialization.SoapElementAttribute("createOrUpdateWorkerReturn")> SvResult
            Dim results() As Object = Me.Invoke("createOrUpdateWorker", New Object() {worker})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createOrUpdateWorkerAsync(ByVal worker As SvWorker)
            Me.createOrUpdateWorkerAsync(worker, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createOrUpdateWorkerAsync(ByVal worker As SvWorker, ByVal userState As Object)
            If (Me.createOrUpdateWorkerOperationCompleted Is Nothing) Then
                Me.createOrUpdateWorkerOperationCompleted = AddressOf Me.OncreateOrUpdateWorkerOperationCompleted
            End If
            Me.InvokeAsync("createOrUpdateWorker", New Object() {worker}, Me.createOrUpdateWorkerOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateOrUpdateWorkerOperationCompleted(ByVal arg As Object)
            If (Not (Me.createOrUpdateWorkerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createOrUpdateWorkerCompleted(Me, New createOrUpdateWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function deleteWorker(ByVal workerName As String) As <System.Xml.Serialization.SoapElementAttribute("deleteWorkerReturn")> SvResult
            Dim results() As Object = Me.Invoke("deleteWorker", New Object() {workerName})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub deleteWorkerAsync(ByVal workerName As String)
            Me.deleteWorkerAsync(workerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteWorkerAsync(ByVal workerName As String, ByVal userState As Object)
            If (Me.deleteWorkerOperationCompleted Is Nothing) Then
                Me.deleteWorkerOperationCompleted = AddressOf Me.OndeleteWorkerOperationCompleted
            End If
            Me.InvokeAsync("deleteWorker", New Object() {workerName}, Me.deleteWorkerOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteWorkerOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteWorkerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteWorkerCompleted(Me, New deleteWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function getDivisions() As <System.Xml.Serialization.SoapElementAttribute("getDivisionsReturn")> SvDivision()
            Dim results() As Object = Me.Invoke("getDivisions", New Object(-1) {})
            Return CType(results(0),SvDivision())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDivisionsAsync()
            Me.getDivisionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDivisionsAsync(ByVal userState As Object)
            If (Me.getDivisionsOperationCompleted Is Nothing) Then
                Me.getDivisionsOperationCompleted = AddressOf Me.OngetDivisionsOperationCompleted
            End If
            Me.InvokeAsync("getDivisions", New Object(-1) {}, Me.getDivisionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDivisionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDivisionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDivisionsCompleted(Me, New getDivisionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/CompanyAdminService-0.0.1")>  _
        Public Function populateWorkerCustomStatus(ByVal svCustomStatusValues() As SvCustomStatusValue) As <System.Xml.Serialization.SoapElementAttribute("populateWorkerCustomStatusReturn")> SvResult()
            Dim results() As Object = Me.Invoke("populateWorkerCustomStatus", New Object() {svCustomStatusValues})
            Return CType(results(0),SvResult())
        End Function
        
        '''<remarks/>
        Public Overloads Sub populateWorkerCustomStatusAsync(ByVal svCustomStatusValues() As SvCustomStatusValue)
            Me.populateWorkerCustomStatusAsync(svCustomStatusValues, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub populateWorkerCustomStatusAsync(ByVal svCustomStatusValues() As SvCustomStatusValue, ByVal userState As Object)
            If (Me.populateWorkerCustomStatusOperationCompleted Is Nothing) Then
                Me.populateWorkerCustomStatusOperationCompleted = AddressOf Me.OnpopulateWorkerCustomStatusOperationCompleted
            End If
            Me.InvokeAsync("populateWorkerCustomStatus", New Object() {svCustomStatusValues}, Me.populateWorkerCustomStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnpopulateWorkerCustomStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.populateWorkerCustomStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent populateWorkerCustomStatusCompleted(Me, New populateWorkerCustomStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvCompany
        
        Private companyIdField As Integer
        
        Private companyIdentifierField As String
        
        Private companyUrlField As String
        
        Private divisionsField() As SvDivision
        
        Private externalCompanyIdentifierField As String
        
        Private locationField As SvLocation
        
        Private nameField As String
        
        Private productGUIDField As String
        
        Private serviceOrganizationsField() As SvServiceOrganization
        
        Private usersField() As SvWorker
        
        '''<remarks/>
        Public Property companyId() As Integer
            Get
                Return Me.companyIdField
            End Get
            Set
                Me.companyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property companyIdentifier() As String
            Get
                Return Me.companyIdentifierField
            End Get
            Set
                Me.companyIdentifierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property companyUrl() As String
            Get
                Return Me.companyUrlField
            End Get
            Set
                Me.companyUrlField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property divisions() As SvDivision()
            Get
                Return Me.divisionsField
            End Get
            Set
                Me.divisionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property externalCompanyIdentifier() As String
            Get
                Return Me.externalCompanyIdentifierField
            End Get
            Set
                Me.externalCompanyIdentifierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property location() As SvLocation
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property productGUID() As String
            Get
                Return Me.productGUIDField
            End Get
            Set
                Me.productGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property serviceOrganizations() As SvServiceOrganization()
            Get
                Return Me.serviceOrganizationsField
            End Get
            Set
                Me.serviceOrganizationsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property users() As SvWorker()
            Get
                Return Me.usersField
            End Get
            Set
                Me.usersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvDivision
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvCustomStatusValue
        
        Private usernameField As String
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvResult
        
        Private errorCodeField As Integer
        
        Private errorMessageField As String
        
        Private goodResultField As Boolean
        
        '''<remarks/>
        Public Property errorCode() As Integer
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property goodResult() As Boolean
            Get
                Return Me.goodResultField
            End Get
            Set
                Me.goodResultField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvDevice
        
        Private activatedDateTimeField As String
        
        Private createdDateTimeField As String
        
        Private currentlyLinkedToField As String
        
        Private descriptionField As String
        
        Private deviceIdentifierField As String
        
        Private deviceTypeField As String
        
        Private lastIpAddressField As String
        
        Private serialNumberField As String
        
        Private softwareVersionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property activatedDateTime() As String
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property createdDateTime() As String
            Get
                Return Me.createdDateTimeField
            End Get
            Set
                Me.createdDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property currentlyLinkedTo() As String
            Get
                Return Me.currentlyLinkedToField
            End Get
            Set
                Me.currentlyLinkedToField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property deviceIdentifier() As String
            Get
                Return Me.deviceIdentifierField
            End Get
            Set
                Me.deviceIdentifierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property deviceType() As String
            Get
                Return Me.deviceTypeField
            End Get
            Set
                Me.deviceTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property lastIpAddress() As String
            Get
                Return Me.lastIpAddressField
            End Get
            Set
                Me.lastIpAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property serialNumber() As String
            Get
                Return Me.serialNumberField
            End Get
            Set
                Me.serialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property softwareVersion() As String
            Get
                Return Me.softwareVersionField
            End Get
            Set
                Me.softwareVersionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvWorker
        
        Private activeStatusField As Boolean
        
        Private addressField As SvAddress
        
        Private divisionNameField As String
        
        Private emailAddrField As String
        
        Private faxNumberField As String
        
        Private firstNameField As String
        
        Private ivrAuthenticationNumberField As String
        
        Private lastNameField As String
        
        Private middleNameField As String
        
        Private mobileNumberField As String
        
        Private notificationMechanismsField() As String
        
        Private passwordField As String
        
        Private phoneNumberField As String
        
        Private pinField As String
        
        Private preferredNameField As String
        
        Private securityGroupNameField As String
        
        Private timezoneField As String
        
        Private userNameField As String
        
        Private workerTypeField As String
        
        '''<remarks/>
        Public Property activeStatus() As Boolean
            Get
                Return Me.activeStatusField
            End Get
            Set
                Me.activeStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property address() As SvAddress
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property divisionName() As String
            Get
                Return Me.divisionNameField
            End Get
            Set
                Me.divisionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property emailAddr() As String
            Get
                Return Me.emailAddrField
            End Get
            Set
                Me.emailAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property faxNumber() As String
            Get
                Return Me.faxNumberField
            End Get
            Set
                Me.faxNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property firstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property ivrAuthenticationNumber() As String
            Get
                Return Me.ivrAuthenticationNumberField
            End Get
            Set
                Me.ivrAuthenticationNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property lastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property middleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property mobileNumber() As String
            Get
                Return Me.mobileNumberField
            End Get
            Set
                Me.mobileNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property notificationMechanisms() As String()
            Get
                Return Me.notificationMechanismsField
            End Get
            Set
                Me.notificationMechanismsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property phoneNumber() As String
            Get
                Return Me.phoneNumberField
            End Get
            Set
                Me.phoneNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property pin() As String
            Get
                Return Me.pinField
            End Get
            Set
                Me.pinField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property preferredName() As String
            Get
                Return Me.preferredNameField
            End Get
            Set
                Me.preferredNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property securityGroupName() As String
            Get
                Return Me.securityGroupNameField
            End Get
            Set
                Me.securityGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property timezone() As String
            Get
                Return Me.timezoneField
            End Get
            Set
                Me.timezoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property userName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workerType() As String
            Get
                Return Me.workerTypeField
            End Get
            Set
                Me.workerTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvAddress
        
        Private aptField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private streetAddressField As String
        
        Private zipField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property apt() As String
            Get
                Return Me.aptField
            End Get
            Set
                Me.aptField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property streetAddress() As String
            Get
                Return Me.streetAddressField
            End Get
            Set
                Me.streetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvString
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvServiceOrganization
        
        Private serviceOrganizationIdField As SvString
        
        Private serviceOrganizationNameField As SvString
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property serviceOrganizationId() As SvString
            Get
                Return Me.serviceOrganizationIdField
            End Get
            Set
                Me.serviceOrganizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property serviceOrganizationName() As SvString
            Get
                Return Me.serviceOrganizationNameField
            End Get
            Set
                Me.serviceOrganizationNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvCoordinate
        
        Private latitudeField As Double
        
        Private longitudeField As Double
        
        '''<remarks/>
        Public Property latitude() As Double
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property longitude() As Double
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvWorkzone
        
        Private circleCenterCoordinateField As SvCoordinate
        
        Private circleRadiusMilesField As Double
        
        Private workzoneTypeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property circleCenterCoordinate() As SvCoordinate
            Get
                Return Me.circleCenterCoordinateField
            End Get
            Set
                Me.circleCenterCoordinateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property circleRadiusMiles() As Double
            Get
                Return Me.circleRadiusMilesField
            End Get
            Set
                Me.circleRadiusMilesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workzoneType() As String
            Get
                Return Me.workzoneTypeField
            End Get
            Set
                Me.workzoneTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvDate
        
        Private dateStringField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property dateString() As String
            Get
                Return Me.dateStringField
            End Get
            Set
                Me.dateStringField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvGpsPosition
        
        Private coverageStatusField As Integer
        
        Private headingField As Double
        
        Private headingCoordinateSystemField As String
        
        Private latitudeField As Double
        
        Private longitudeField As Double
        
        Private positionCoordinateSystemField As String
        
        Private speedField As Double
        
        Private timestampField As SvDate
        
        Private workerNameField As String
        
        '''<remarks/>
        Public Property coverageStatus() As Integer
            Get
                Return Me.coverageStatusField
            End Get
            Set
                Me.coverageStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property heading() As Double
            Get
                Return Me.headingField
            End Get
            Set
                Me.headingField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property headingCoordinateSystem() As String
            Get
                Return Me.headingCoordinateSystemField
            End Get
            Set
                Me.headingCoordinateSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property latitude() As Double
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property longitude() As Double
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property positionCoordinateSystem() As String
            Get
                Return Me.positionCoordinateSystemField
            End Get
            Set
                Me.positionCoordinateSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property speed() As Double
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property timestamp() As SvDate
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workerName() As String
            Get
                Return Me.workerNameField
            End Get
            Set
                Me.workerNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CompanyAdminService")>  _
    Partial Public Class SvLocation
        
        Private addressField As SvAddress
        
        Private contactNameField As String
        
        Private contactPhoneField As String
        
        Private positionField As SvGpsPosition
        
        Private workzoneField As SvWorkzone
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property address() As SvAddress
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property contactName() As String
            Get
                Return Me.contactNameField
            End Get
            Set
                Me.contactNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property contactPhone() As String
            Get
                Return Me.contactPhoneField
            End Get
            Set
                Me.contactPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property position() As SvGpsPosition
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workzone() As SvWorkzone
            Get
                Return Me.workzoneField
            End Get
            Set
                Me.workzoneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub createCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As createCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvCompany
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvCompany)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub createDeviceCompletedEventHandler(ByVal sender As Object, ByVal e As createDeviceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createDeviceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getWorkersCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvWorker()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvWorker())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getWorkerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkerByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkerByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvWorker
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvWorker)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getWorkersByNameCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkersByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkersByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvWorker()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvWorker())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getDeviceCompletedEventHandler(ByVal sender As Object, ByVal e As getDeviceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDeviceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvDevice
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvDevice)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getDevicesCompletedEventHandler(ByVal sender As Object, ByVal e As getDevicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDevicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvDevice()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvDevice())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub deleteDeviceCompletedEventHandler(ByVal sender As Object, ByVal e As deleteDeviceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class deleteDeviceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub updateDeviceCompletedEventHandler(ByVal sender As Object, ByVal e As updateDeviceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class updateDeviceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub createOrUpdateDeviceCompletedEventHandler(ByVal sender As Object, ByVal e As createOrUpdateDeviceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createOrUpdateDeviceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub linkDeviceToWorkerCompletedEventHandler(ByVal sender As Object, ByVal e As linkDeviceToWorkerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class linkDeviceToWorkerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub createWorkerCompletedEventHandler(ByVal sender As Object, ByVal e As createWorkerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createWorkerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub updateWorkerCompletedEventHandler(ByVal sender As Object, ByVal e As updateWorkerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class updateWorkerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub createOrUpdateWorkerCompletedEventHandler(ByVal sender As Object, ByVal e As createOrUpdateWorkerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createOrUpdateWorkerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub deleteWorkerCompletedEventHandler(ByVal sender As Object, ByVal e As deleteWorkerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class deleteWorkerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getDivisionsCompletedEventHandler(ByVal sender As Object, ByVal e As getDivisionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDivisionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvDivision()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvDivision())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub populateWorkerCustomStatusCompletedEventHandler(ByVal sender As Object, ByVal e As populateWorkerCustomStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class populateWorkerCustomStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult())
            End Get
        End Property
    End Class
End Namespace
