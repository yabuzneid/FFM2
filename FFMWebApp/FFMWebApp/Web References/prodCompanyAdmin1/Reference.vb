'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace prodCompanyAdmin1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UserStatusService-0.0.1SoapBinding", [Namespace]:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SvFormField)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SvTimesheet))>  _
    Partial Public Class UserStatusWebServiceProxyService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getTimesheetsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTimesheetsByWorkerNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTimecardActionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTimecardActionsByWorkerNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserFormsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserFormsByWorkerNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserFormsByFormNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitUserActionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUpdatedTimecardActionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUpdatedTimecardActionsByWorkerNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FFMWebApp.My.MySettings.Default.FFMWebApp_prodCompanyAdmin1_UserStatusWebServiceProxyService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getTimesheetsCompleted As getTimesheetsCompletedEventHandler
        
        '''<remarks/>
        Public Event getTimesheetsByWorkerNameCompleted As getTimesheetsByWorkerNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getTimecardActionsCompleted As getTimecardActionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getTimecardActionsByWorkerNameCompleted As getTimecardActionsByWorkerNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserFormsCompleted As getUserFormsCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserFormsByWorkerNameCompleted As getUserFormsByWorkerNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserFormsByFormNameCompleted As getUserFormsByFormNameCompletedEventHandler
        
        '''<remarks/>
        Public Event submitUserActionCompleted As submitUserActionCompletedEventHandler
        
        '''<remarks/>
        Public Event getUpdatedTimecardActionsCompleted As getUpdatedTimecardActionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getUpdatedTimecardActionsByWorkerNameCompleted As getUpdatedTimecardActionsByWorkerNameCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getTimesheets(ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getTimesheetsReturn")> SvTimesheet()
            Dim results() As Object = Me.Invoke("getTimesheets", New Object() {start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvTimesheet())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTimesheetsAsync(ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getTimesheetsAsync(start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTimesheetsAsync(ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getTimesheetsOperationCompleted Is Nothing) Then
                Me.getTimesheetsOperationCompleted = AddressOf Me.OngetTimesheetsOperationCompleted
            End If
            Me.InvokeAsync("getTimesheets", New Object() {start, [end]}, Me.getTimesheetsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTimesheetsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTimesheetsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTimesheetsCompleted(Me, New getTimesheetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getTimesheetsByWorkerName(ByVal workerName As String, ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getTimesheetsByWorkerNameReturn")> SvTimesheet()
            Dim results() As Object = Me.Invoke("getTimesheetsByWorkerName", New Object() {workerName, start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvTimesheet())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTimesheetsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getTimesheetsByWorkerNameAsync(workerName, start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTimesheetsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getTimesheetsByWorkerNameOperationCompleted Is Nothing) Then
                Me.getTimesheetsByWorkerNameOperationCompleted = AddressOf Me.OngetTimesheetsByWorkerNameOperationCompleted
            End If
            Me.InvokeAsync("getTimesheetsByWorkerName", New Object() {workerName, start, [end]}, Me.getTimesheetsByWorkerNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTimesheetsByWorkerNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTimesheetsByWorkerNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTimesheetsByWorkerNameCompleted(Me, New getTimesheetsByWorkerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getTimecardActions(ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getTimecardActionsReturn")> SvUserAction()
            Dim results() As Object = Me.Invoke("getTimecardActions", New Object() {start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvUserAction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTimecardActionsAsync(ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getTimecardActionsAsync(start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTimecardActionsAsync(ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getTimecardActionsOperationCompleted Is Nothing) Then
                Me.getTimecardActionsOperationCompleted = AddressOf Me.OngetTimecardActionsOperationCompleted
            End If
            Me.InvokeAsync("getTimecardActions", New Object() {start, [end]}, Me.getTimecardActionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTimecardActionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTimecardActionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTimecardActionsCompleted(Me, New getTimecardActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getTimecardActionsByWorkerName(ByVal workerName As String, ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getTimecardActionsByWorkerNameReturn")> SvUserAction()
            Dim results() As Object = Me.Invoke("getTimecardActionsByWorkerName", New Object() {workerName, start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvUserAction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTimecardActionsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getTimecardActionsByWorkerNameAsync(workerName, start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTimecardActionsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getTimecardActionsByWorkerNameOperationCompleted Is Nothing) Then
                Me.getTimecardActionsByWorkerNameOperationCompleted = AddressOf Me.OngetTimecardActionsByWorkerNameOperationCompleted
            End If
            Me.InvokeAsync("getTimecardActionsByWorkerName", New Object() {workerName, start, [end]}, Me.getTimecardActionsByWorkerNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTimecardActionsByWorkerNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTimecardActionsByWorkerNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTimecardActionsByWorkerNameCompleted(Me, New getTimecardActionsByWorkerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getUserForms(ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getUserFormsReturn")> SvUserAction()
            Dim results() As Object = Me.Invoke("getUserForms", New Object() {start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvUserAction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserFormsAsync(ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getUserFormsAsync(start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserFormsAsync(ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getUserFormsOperationCompleted Is Nothing) Then
                Me.getUserFormsOperationCompleted = AddressOf Me.OngetUserFormsOperationCompleted
            End If
            Me.InvokeAsync("getUserForms", New Object() {start, [end]}, Me.getUserFormsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserFormsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserFormsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserFormsCompleted(Me, New getUserFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getUserFormsByWorkerName(ByVal workerName As String, ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getUserFormsByWorkerNameReturn")> SvUserAction()
            Dim results() As Object = Me.Invoke("getUserFormsByWorkerName", New Object() {workerName, start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvUserAction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserFormsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getUserFormsByWorkerNameAsync(workerName, start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserFormsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getUserFormsByWorkerNameOperationCompleted Is Nothing) Then
                Me.getUserFormsByWorkerNameOperationCompleted = AddressOf Me.OngetUserFormsByWorkerNameOperationCompleted
            End If
            Me.InvokeAsync("getUserFormsByWorkerName", New Object() {workerName, start, [end]}, Me.getUserFormsByWorkerNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserFormsByWorkerNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserFormsByWorkerNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserFormsByWorkerNameCompleted(Me, New getUserFormsByWorkerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getUserFormsByFormName(ByVal formName As String, ByVal start As SvDate, ByRef [end] As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getUserFormsByFormNameReturn")> SvUserAction()
            Dim results() As Object = Me.Invoke("getUserFormsByFormName", New Object() {formName, start, [end]})
            [end] = CType(results(1),SvDate)
            Return CType(results(0),SvUserAction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserFormsByFormNameAsync(ByVal formName As String, ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getUserFormsByFormNameAsync(formName, start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserFormsByFormNameAsync(ByVal formName As String, ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getUserFormsByFormNameOperationCompleted Is Nothing) Then
                Me.getUserFormsByFormNameOperationCompleted = AddressOf Me.OngetUserFormsByFormNameOperationCompleted
            End If
            Me.InvokeAsync("getUserFormsByFormName", New Object() {formName, start, [end]}, Me.getUserFormsByFormNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserFormsByFormNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserFormsByFormNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserFormsByFormNameCompleted(Me, New getUserFormsByFormNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function submitUserAction(ByVal userAction As SvUserAction) As <System.Xml.Serialization.SoapElementAttribute("submitUserActionReturn")> SvResult
            Dim results() As Object = Me.Invoke("submitUserAction", New Object() {userAction})
            Return CType(results(0),SvResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitUserActionAsync(ByVal userAction As SvUserAction)
            Me.submitUserActionAsync(userAction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitUserActionAsync(ByVal userAction As SvUserAction, ByVal userState As Object)
            If (Me.submitUserActionOperationCompleted Is Nothing) Then
                Me.submitUserActionOperationCompleted = AddressOf Me.OnsubmitUserActionOperationCompleted
            End If
            Me.InvokeAsync("submitUserAction", New Object() {userAction}, Me.submitUserActionOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitUserActionOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitUserActionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitUserActionCompleted(Me, New submitUserActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getUpdatedTimecardActions(ByVal start As SvDate, ByVal [end] As SvDate, <System.Xml.Serialization.SoapElementAttribute("end")> ByRef end1 As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getUpdatedTimecardActionsReturn")> SvUserActionUpdate()
            Dim results() As Object = Me.Invoke("getUpdatedTimecardActions", New Object() {start, [end]})
            end1 = CType(results(1),SvDate)
            Return CType(results(0),SvUserActionUpdate())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUpdatedTimecardActionsAsync(ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getUpdatedTimecardActionsAsync(start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUpdatedTimecardActionsAsync(ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getUpdatedTimecardActionsOperationCompleted Is Nothing) Then
                Me.getUpdatedTimecardActionsOperationCompleted = AddressOf Me.OngetUpdatedTimecardActionsOperationCompleted
            End If
            Me.InvokeAsync("getUpdatedTimecardActions", New Object() {start, [end]}, Me.getUpdatedTimecardActionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUpdatedTimecardActionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUpdatedTimecardActionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUpdatedTimecardActionsCompleted(Me, New getUpdatedTimecardActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://service.webservice.gearworks.com", ResponseNamespace:="https://connectorprod.fieldforcemanager.com/services/UserStatusService-0.0.1")>  _
        Public Function getUpdatedTimecardActionsByWorkerName(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate, <System.Xml.Serialization.SoapElementAttribute("end")> ByRef end1 As SvDate) As <System.Xml.Serialization.SoapElementAttribute("getUpdatedTimecardActionsByWorkerNameReturn")> SvUserActionUpdate()
            Dim results() As Object = Me.Invoke("getUpdatedTimecardActionsByWorkerName", New Object() {workerName, start, [end]})
            end1 = CType(results(1),SvDate)
            Return CType(results(0),SvUserActionUpdate())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUpdatedTimecardActionsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate)
            Me.getUpdatedTimecardActionsByWorkerNameAsync(workerName, start, [end], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUpdatedTimecardActionsByWorkerNameAsync(ByVal workerName As String, ByVal start As SvDate, ByVal [end] As SvDate, ByVal userState As Object)
            If (Me.getUpdatedTimecardActionsByWorkerNameOperationCompleted Is Nothing) Then
                Me.getUpdatedTimecardActionsByWorkerNameOperationCompleted = AddressOf Me.OngetUpdatedTimecardActionsByWorkerNameOperationCompleted
            End If
            Me.InvokeAsync("getUpdatedTimecardActionsByWorkerName", New Object() {workerName, start, [end]}, Me.getUpdatedTimecardActionsByWorkerNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUpdatedTimecardActionsByWorkerNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUpdatedTimecardActionsByWorkerNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUpdatedTimecardActionsByWorkerNameCompleted(Me, New getUpdatedTimecardActionsByWorkerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvDate
        
        Private dateStringField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property dateString() As String
            Get
                Return Me.dateStringField
            End Get
            Set
                Me.dateStringField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvResult
        
        Private errorCodeField As Integer
        
        Private errorMessageField As String
        
        Private goodResultField As Boolean
        
        '''<remarks/>
        Public Property errorCode() As Integer
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property goodResult() As Boolean
            Get
                Return Me.goodResultField
            End Get
            Set
                Me.goodResultField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvCoordinate
        
        Private latitudeField As Double
        
        Private longitudeField As Double
        
        '''<remarks/>
        Public Property latitude() As Double
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property longitude() As Double
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvWorkzone
        
        Private circleCenterCoordinateField As SvCoordinate
        
        Private circleRadiusMilesField As Double
        
        Private workzoneTypeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property circleCenterCoordinate() As SvCoordinate
            Get
                Return Me.circleCenterCoordinateField
            End Get
            Set
                Me.circleCenterCoordinateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property circleRadiusMiles() As Double
            Get
                Return Me.circleRadiusMilesField
            End Get
            Set
                Me.circleRadiusMilesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workzoneType() As String
            Get
                Return Me.workzoneTypeField
            End Get
            Set
                Me.workzoneTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvGpsPosition
        
        Private coverageStatusField As Integer
        
        Private headingField As Double
        
        Private headingCoordinateSystemField As String
        
        Private latitudeField As Double
        
        Private longitudeField As Double
        
        Private positionCoordinateSystemField As String
        
        Private speedField As Double
        
        Private timestampField As SvDate
        
        Private workerNameField As String
        
        '''<remarks/>
        Public Property coverageStatus() As Integer
            Get
                Return Me.coverageStatusField
            End Get
            Set
                Me.coverageStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property heading() As Double
            Get
                Return Me.headingField
            End Get
            Set
                Me.headingField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property headingCoordinateSystem() As String
            Get
                Return Me.headingCoordinateSystemField
            End Get
            Set
                Me.headingCoordinateSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property latitude() As Double
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property longitude() As Double
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property positionCoordinateSystem() As String
            Get
                Return Me.positionCoordinateSystemField
            End Get
            Set
                Me.positionCoordinateSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property speed() As Double
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property timestamp() As SvDate
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workerName() As String
            Get
                Return Me.workerNameField
            End Get
            Set
                Me.workerNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvAddress
        
        Private aptField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private streetAddressField As String
        
        Private zipField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property apt() As String
            Get
                Return Me.aptField
            End Get
            Set
                Me.aptField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property streetAddress() As String
            Get
                Return Me.streetAddressField
            End Get
            Set
                Me.streetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvLocation
        
        Private addressField As SvAddress
        
        Private contactNameField As String
        
        Private contactPhoneField As String
        
        Private positionField As SvGpsPosition
        
        Private workzoneField As SvWorkzone
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property address() As SvAddress
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property contactName() As String
            Get
                Return Me.contactNameField
            End Get
            Set
                Me.contactNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property contactPhone() As String
            Get
                Return Me.contactPhoneField
            End Get
            Set
                Me.contactPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property position() As SvGpsPosition
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workzone() As SvWorkzone
            Get
                Return Me.workzoneField
            End Get
            Set
                Me.workzoneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:JobService")>  _
    Partial Public Class SvFormField
        
        Private fieldNameField As String
        
        Private fieldValueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property fieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property fieldValue() As String
            Get
                Return Me.fieldValueField
            End Get
            Set
                Me.fieldValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:JobService")>  _
    Partial Public Class SvForm
        
        Private formDataField() As SvFormField
        
        Private formNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property formData() As SvFormField()
            Get
                Return Me.formDataField
            End Get
            Set
                Me.formDataField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property formName() As String
            Get
                Return Me.formNameField
            End Get
            Set
                Me.formNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.SoapIncludeAttribute(GetType(SvUserActionUpdate)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvUserAction
        
        Private actionNameField As String
        
        Private executionDateTimeField As SvDate
        
        Private formField As SvForm
        
        Private locationField As SvLocation
        
        Private workerNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property actionName() As String
            Get
                Return Me.actionNameField
            End Get
            Set
                Me.actionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property executionDateTime() As SvDate
            Get
                Return Me.executionDateTimeField
            End Get
            Set
                Me.executionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property form() As SvForm
            Get
                Return Me.formField
            End Get
            Set
                Me.formField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property location() As SvLocation
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workerName() As String
            Get
                Return Me.workerNameField
            End Get
            Set
                Me.workerNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvUserActionUpdate
        Inherits SvUserAction
        
        Private actionIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property actionId() As String
            Get
                Return Me.actionIdField
            End Get
            Set
                Me.actionIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:UserStatusService")>  _
    Partial Public Class SvTimesheet
        
        Private endDateField As SvDate
        
        Private startDateField As SvDate
        
        Private timecardNameField As String
        
        Private workerNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property endDate() As SvDate
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property startDate() As SvDate
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property timecardName() As String
            Get
                Return Me.timecardNameField
            End Get
            Set
                Me.timecardNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property workerName() As String
            Get
                Return Me.workerNameField
            End Get
            Set
                Me.workerNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getTimesheetsCompletedEventHandler(ByVal sender As Object, ByVal e As getTimesheetsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTimesheetsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvTimesheet()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvTimesheet())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getTimesheetsByWorkerNameCompletedEventHandler(ByVal sender As Object, ByVal e As getTimesheetsByWorkerNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTimesheetsByWorkerNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvTimesheet()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvTimesheet())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getTimecardActionsCompletedEventHandler(ByVal sender As Object, ByVal e As getTimecardActionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTimecardActionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserAction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserAction())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getTimecardActionsByWorkerNameCompletedEventHandler(ByVal sender As Object, ByVal e As getTimecardActionsByWorkerNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTimecardActionsByWorkerNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserAction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserAction())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getUserFormsCompletedEventHandler(ByVal sender As Object, ByVal e As getUserFormsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserFormsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserAction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserAction())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getUserFormsByWorkerNameCompletedEventHandler(ByVal sender As Object, ByVal e As getUserFormsByWorkerNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserFormsByWorkerNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserAction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserAction())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getUserFormsByFormNameCompletedEventHandler(ByVal sender As Object, ByVal e As getUserFormsByFormNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserFormsByFormNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserAction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserAction())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property [end]() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub submitUserActionCompletedEventHandler(ByVal sender As Object, ByVal e As submitUserActionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitUserActionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getUpdatedTimecardActionsCompletedEventHandler(ByVal sender As Object, ByVal e As getUpdatedTimecardActionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUpdatedTimecardActionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserActionUpdate()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserActionUpdate())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property end1() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub getUpdatedTimecardActionsByWorkerNameCompletedEventHandler(ByVal sender As Object, ByVal e As getUpdatedTimecardActionsByWorkerNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUpdatedTimecardActionsByWorkerNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SvUserActionUpdate()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SvUserActionUpdate())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property end1() As SvDate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SvDate)
            End Get
        End Property
    End Class
End Namespace
